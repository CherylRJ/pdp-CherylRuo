;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname coffee-machine) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/universe)
(require rackunit)
(require "extras.rkt")
(provide initial-machine
         machine-next-state
         machine-output
         machine-remaining-coffee
         machine-remaining-chocolate
         machine-bank
         

;; A CustomerInput is one of
;; -- a PosInt
;; -- "coffee"
;; -- "hot chocolate"
;; -- "change"
;; interp: insert the specified amount of money, in cents
;; interp: request a coffee
;; interp: request a hot chocolate
;; interp: return all the unspent money that the
;; customer has inserted
;; A MachineOutput is one of
;; -- "coffee"         interp: machine dispenses a cup of coffee
;; -- "hot chocolate"  interp: machine dispenses a cup of hot chocolate
;; -- "Out of Item"
;; -- a PosInt
;; interp: machine displays "Out of Item"
;; interp: machine releases the specified amount of
;; money, in cents
;; interp: the machine does nothing
;; -- "Nothing"

;; initial-machine : NonNegInt NonNegInt -> MachineState
;; GIVEN: a number of cups of coffee and of hot chocolate
;; RETURNS: the state of a machine loaded with the given number of cups
;;         of coffee and of hot chocolate, with an empty bank.

;; machine-next-state : MachineState CustomerInput -> MachineState
;; GIVEN: a machine state and a customer input
;; RETURNS: the state of the machine that should follow the customer's
;; input

;; machine-output : MachineState CustomerInput -> MachineOutput
;; GIVEN: a machine state and a customer input
;; RETURNS: a MachineOutput that describes the machine's response to the
;; customer input

;; machine-remaining-coffee : MachineState -> NonNegInt
;; GIVEN: a machine state
;; RETURNS: the number of cups of coffee left in the machine

;; machine-remaining-chocolate : MachineState -> NonNegInt
;; GIVEN: a machine state
;; RETURNS: the number of cups of hot chocolate left in the machine

;; machine-bank : MachineState -> NonNegInt
;; GIVEN: a machine state
;; RETURNS: the amount of money in the machine's bank, in cents